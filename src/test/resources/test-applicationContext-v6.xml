<?xml version="1.0" encoding="UTF-8"?>
<!-- DTD 설정-->
<!--<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">-->
<!-- Schema 설정 -->
<!-- 특별한 이유가 없다면 DTD보다는 스키마를 사용 (1. 로컬 네임스페이스 사용, 2. 상속 확장 등에 용이)-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>

    <bean id="transactionAdvice" class="jun.spring.ch6.proxy.TransactionAdvice">
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

    <bean id="transactionPointcut" class="org.springframework.aop.aspectj.AspectJExpressionPointcut">
        <property name="expression" value="execution(* *..*ServiceImpl.upgrade*(..))"/>
    </bean>

    <!--<bean id="transactionPointcut" class="jun.spring.ch6.proxy.NameMatchClassMethodPointcut">-->
        <!--<property name="mappedClassName" value="*ServiceImpl"/>-->
        <!--<property name="mappedName" value="upgrade*"/>-->
    <!--</bean>-->

    <bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
        <property name="advice" ref="transactionAdvice"/>
        <property name="pointcut" ref="transactionPointcut"/>
    </bean>

    <!--<bean id="userService" class="org.springframework.aop.framework.ProxyFactoryBean">-->
        <!--<property name="target" ref="userServiceImpl"/>-->
        <!--<property name="interceptorNames">-->
            <!--<list>-->
                <!--<value>transactionAdvisor</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<bean id="userService" class="jun.spring.ch6.service.UserServiceTx">-->
        <!--<property name="userService" ref="userServiceImpl"/>-->
        <!--<property name="transactionManager" ref="transactionManager"/>-->
    <!--</bean>-->

    <!--<bean id="userService" class="jun.spring.ch6.factoryBean.TxProxyFactoryBean">-->
        <!--<property name="target" ref="userServiceImpl"/>-->
        <!--<property name="transactionManager" ref="transactionManager"/>-->
        <!--<property name="pattern" value="upgradeLevels"/>-->
        <!--<property name="serviceInterface" value="jun.spring.ch6.service.UserService"/>-->
    <!--</bean>-->

    <bean id="userService" class="jun.spring.ch6.service.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
        <property name="mailSender" ref="mailSender"/>
    </bean>

    <bean id="testUserService" class="v6.UserServiceTest$TestUserServiceImpl" parent="userService"/>

    <!--<bean id="userServiceImpl" class="jun.spring.ch6.service.UserServiceImpl">-->
        <!--<property name="userDao" ref="userDao"/>-->
        <!--<property name="mailSender" ref="mailSender"/>-->
    <!--</bean>-->

    <bean id="userLevelUpgradePolicy" class="jun.spring.ch6.service.UserLevelUpgradePolicyImpl">
        <property name="userDao" ref="userDao"/>
    </bean>

    <bean id="userDao" class="jun.spring.ch6.dao.UserDaoJdbc">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="mailSender" class="jun.spring.ch6.service.DummyMailSender"/>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <!-- 빈 오브젝트의 레퍼런스가 아니라 단순 값을 주입할 때는 value 애트리뷰트 사용 (타입에 따라 컨버팅)-->
        <property name="driverClass" value="org.mariadb.jdbc.Driver"/>
        <property name="url" value="jdbc:mariadb://localhost/spring_test_dev"/>
        <property name="username" value="root"/>
        <property name="password" value="1234"/>
    </bean>

</beans>